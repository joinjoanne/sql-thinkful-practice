{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 -- M17 - SQL Self Sufficiency Exam Submission 2\
-- Submission 1 (Correct): 2, 5, 8, 9\
-- Revision (Incorrect): 1, 3, 4, 6, 7 \
\
-- 1. Write a query that allows you to inspect the schema of the naep table.\
\
SELECT * \
FROM information_schema.columns\
WHERE table_name = 'naep';\
\
-- 3. Write a query that returns summary statistics for avg_math_4_score by state, \
-- and sort the results alphabetically by state name.\
\
SELECT state, \
	COUNT(avg_math_4_score) AS count_avg_math_4_score,\
	AVG(avg_math_4_score) AS state_avg_math_4_score, \
	MAX(avg_math_4_score) AS max_avg_math_4_score,\
	MIN(avg_math_4_score) AS min_avg_math_4_score\
FROM naep\
GROUP BY state\
ORDER BY state;\
\
-- 4. Write a query that alters the previous query so that it only returns the summary statistics \
-- or avg_math_4_score by state with differences in max and min values greater than 30.\
-- JY NOTE: Insert after Line 5 to check: MAX(avg_math_4_score)-MIN(avg_math_4_score)\
\
SELECT state, \
	COUNT(avg_math_4_score) AS count_avg_math_4_score,\
	AVG(avg_math_4_score) AS state_avg_math_4_score, \
	MAX(avg_math_4_score) AS max_avg_math_4_score,\
	MIN(avg_math_4_score) AS min_avg_math_4_score\
FROM naep\
GROUP BY state\
HAVING (MAX(avg_math_4_score)-MIN(avg_math_4_score)) < 30 \
ORDER BY state;\
\
-- 6. Write a query that calculates the average avg_math_4_score rounded to the \
-- nearest 2 decimal places over all states in the year 2000.\
\
SELECT round(AVG(avg_math_4_score), 2) AS avg_math_4_score\
FROM naep\
WHERE year = 2000;\
\
-- 7. Write a query that returns a field called below_average_states_y2000 that lists \
-- all states with an avg_math_4_score less than the average over all states in the year 2000.\
\
SELECT state, avg_math_4_score AS below_average_states_y2000 \
FROM naep\
WHERE year = 2000\
GROUP BY state, avg_math_4_score, year\
HAVING avg_math_4_score < 224.80 \
ORDER BY state;\
\
-- 2. Write a query that returns the first 50 records of the naep table.\
\
SELECT * \
FROM naep\
LIMIT 50; \
\
-- 5. Write a query that returns a field called bottom_10_states that lists the \
-- states in the bottom 10 for avg_math_4_score in the year 2000.\
-- JY-Note: This is WITHOUT values of NULL\
\
SELECT state AS bottom_10_states, avg_math_4_score AS avg_math_4_score_in_yr_2000\
FROM naep\
GROUP BY state, avg_math_4_score, year\
HAVING year = 2000 AND avg_math_4_score IS NOT NULL \
ORDER BY avg_math_4_score ASC, state\
LIMIT 10;\
\
-- 8. Write a query that returns a field called scores_missing_y2000 that lists \
-- any states with missing values in the avg_math_4_score column of the naep data table \
-- for the year 2000.\
\
SELECT state, avg_math_4_score AS scores_missing_y2000\
FROM naep\
WHERE year = 2000\
GROUP BY state, year, avg_math_4_score\
HAVING avg_math_4_score IS NULL\
ORDER BY state;\
\
-- 9. Write a query that returns for the year 2000 the state, avg_math_4_score, and \
-- total_expenditure from the naep table left outer joined with the finance table, \
-- using id as the key and ordered by total_expenditure greatest to least. \
-- Be sure to round avg_math_4_score to the nearest 2 decimal places, and then \
-- filter out NULL avg_math_4_scores in order to see any correlation more clearly.\
\
SELECT naep.state, ROUND(naep.avg_math_4_score, 2) AS avg_math_4_score, finance.total_expenditure AS total_expenditure_y2000\
FROM naep LEFT OUTER JOIN finance\
ON naep.id = finance.id\
WHERE naep.year = 2000\
GROUP BY avg_math_4_score, naep.year, naep.state, finance.total_expenditure\
HAVING naep.avg_math_4_score IS NOT NULL \
ORDER BY finance.total_expenditure DESC;\
\
\
\
}